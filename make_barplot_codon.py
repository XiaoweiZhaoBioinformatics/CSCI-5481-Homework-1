import seaborn as sns
import matplotlib.pyplot as plt
import pandas as pd
import os
import sys
import warnings
warnings.filterwarnings("ignore", "is_categorical_dtype")

def main():

    # Input files are the codon counts files (.csv) generated by count_codons.py
    # If the number of input files is not equal to 3, then print out warning and exit the script
    if len(sys.argv) != 3:
        print("Usage: make_barplot_codon.py <codon_counts_csv_1> <codon_counts_csv_2>")
        sys.exit(1)

    # Apply convert_codon function to the first and second input files 
    inputfile_1 = sys.argv[1]
    inputfile_2 = sys.argv[2]

    # Read the csv files for two count tables
    whole = pd.read_csv(inputfile_1, header = None, names = ['codon', 'counts'])
    separate = pd.read_csv(inputfile_2, header = None, names = ['codon', 'counts'])
    
    # Add a new column 'group' to two dataframes
    whole = whole.assign(group = 'Whole genome (random frame shift)')
    separate = separate.assign(group = 'Coding sequences (correct frame shift)')
    
    # Sort the codon based on the count in 'separate' dataframe
    sorted_codon = separate.sort_values(by = 'counts', ascending = False)['codon']
    
    # Concatenate whole and separate files along rows
    df = pd.concat([whole, separate], axis = 0)
    
    # Create a figure with a size of 24x8
    plt.figure(figsize = (24, 12))
    
    # Set the larger font scale
    sns.set(font_scale = 1.5)
    
    # Create a bar plot
    sns.barplot(x = 'codon', y = 'counts', hue = 'group', data = df, order = sorted_codon)
    
    # Rotate the x-axis labels by 90 degrees
    plt.xticks(rotation = 90)
    
    # Add a legend to the upper right corner of the plot
    plt.legend(loc = 'upper right')
    
    # Save the plot as a pdf file
    plt.savefig("codon_barplot.pdf", format = 'pdf')

if __name__ == "__main__":
    main()
